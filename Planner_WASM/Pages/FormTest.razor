@page "/test"
@using System.ComponentModel.DataAnnotations


<EditForm Model="@testModel" OnValidSubmit="SubmitModel" OnInvalidSubmit="InvalidSubmit">
    <MudTimePicker Label="Select starting time" AmPm="true" @bind-Time="testModel.TimeFrom"></MudTimePicker>
    <MudTimePicker Label="Select end time" AmPm="true" @bind-Time="testModel.TimeTo"></MudTimePicker>
    @if (!string.IsNullOrWhiteSpace(_timeError))
    {
        <MudAlert Severity="Severity.Error" Elevation="0">
            @_timeError
        </MudAlert>
    }
    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Tertiary" Class="ml-auto">Register</MudButton>
</EditForm>


@code {
    TimeSlotModel testModel = new TimeSlotModel();
    private string _timeError;


    public class TimeSlotModel
    {
        [Required]
        public TimeSpan? TimeFrom { get; set; }

        [Required]
        public TimeSpan? TimeTo { get; set; }

        public ActivityType Activity { get; set; }


        public override string ToString()
        {
            return $"Time from: {TimeFrom}, Time to: {TimeTo}, Activity: {Activity}";
        }
    }

    public enum ActivityType
    {
        Work,
        Study,
        Fitness,
        Chores,
        Fun,
        Social,
        Sleep
    }

    public void SubmitModel()
    {
        if(testModel.TimeFrom >= testModel.TimeTo)
        {
            _timeError = "Time from cannot be greater than Time to";
            return;
        }
        _timeError = string.Empty;
        Console.WriteLine(testModel);
        
    }

    public void InvalidSubmit()
    {
        Console.WriteLine("That was invalid");
    }
}